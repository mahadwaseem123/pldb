title Implicit Arguments

import settings.scroll
htmlTitle Implicit Arguments - Feature

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/implicit-arguments-feature.pldb

paragraph
 Implicit Arguments are a <a href="../lists/features.html">feature</a>.









paragraph
 Arguments that are not passed by the function caller, but are found in the function caller's scope.

list
 - Read more about Implicit Arguments on the web: <a href="https://docs.scala-lang.org/tour/implicit-parameters.html">1</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/implicit-arguments-feature">Improve our Implicit Arguments file</a>

html
 <br>

paragraph
 Languages <b>with</b> Implicit Arguments include <a href="scala.html">Scala</a>

exampleCodeHeader Example from <a href="scala.html">Scala</a>:

code
 // https://docs.scala-lang.org/tour/implicit-parameters.html
 abstract class Monoid[A] {
   def add(x: A, y: A): A
   def unit: A
 }
 
 object ImplicitTest {
   implicit val stringMonoid: Monoid[String] = new Monoid[String] {
     def add(x: String, y: String): String = x concat y
     def unit: String = &quot;&quot;
   }
   
   implicit val intMonoid: Monoid[Int] = new Monoid[Int] {
     def add(x: Int, y: Int): Int = x + y
     def unit: Int = 0
   }
   
   def sum[A](xs: List[A])(implicit m: Monoid[A]): A =
     if (xs.isEmpty) m.unit
     else m.add(xs.head, sum(xs.tail))
     
   def main(args: Array[String]): Unit = {
     println(sum(List(1, 2, 3)))       // uses intMonoid implicitly
     println(sum(List(&quot;a&quot;, &quot;b&quot;, &quot;c&quot;))) // uses stringMonoid implicitly
   }
 }



















keyboardNav file-imports-feature.html implicit-type-casting-feature.html
